#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <3 3>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp LG(Z)  &kp LS(LG(Z))  &kp B      &kp E    &kp G           &kp I      &none         &none         &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bootloader
&none      &kp V          &kp K      &kp J    &kp LC(LA(C))   &kp LC(C)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5        &bt BT_CLR_ALL
&none      &kp DEL        &kp LA(P)  &kp RET  &kp LA(O)       &kp LA(N)  &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0        &none
                                     &sl 1    &kp LEFT_SHIFT  &sl 2      &none         &none         &none
            >;
        };

        riese {
            bindings = <
&kp ESCAPE                            &kp LC(DELETE)  &kp LS(LG(I))  &kp M      &kp Q           &kp W      &none  &none  &none  &none  &none  &none
&kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &kp LG(X)       &kp LG(C)      &kp LG(V)  &none           &none      &none  &none  &none  &none  &none  &none
&kp LG(MINUS)                         &kp LG(PLUS)    &none          &none      &kp LC(H)       &kp LC(V)  &none  &none  &none  &none  &none  &none
                                                                     &sl 1      &kp LEFT_SHIFT  &sl 2      &none  &none  &none
            >;
        };

        lower {
            bindings = <
&kp LG(S)  &none           &none               &none              &kp L             &kp U      &none  &none  &none  &none  &none  &none
&none      &none           &none               &none              &none             &none      &none  &none  &none  &none  &none  &none
&none      &kp LA(DELETE)  &kp LG(DOWN_ARROW)  &kp LG(LC(LS(N)))  &kp LG(UP_ARROW)  &kp LG(N)  &none  &none  &none  &none  &none  &none
                                               &sl 1              &kp LEFT_SHIFT    &sl 2      &none  &none  &none
            >;
        };

        system {
            bindings = <
&bootloader  &none           &none         &none         &none         &none         &none         &none         &none         &none         &none           &bootloader
&bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &bt BT_CLR
&sys_reset   &bt BT_CLR_ALL  &none         &none         &none         &none         &none         &none         &none         &none         &bt BT_CLR_ALL  &sys_reset
                                           &trans        &none         &trans        &trans        &none         &trans
            >;
        };
    };
};
