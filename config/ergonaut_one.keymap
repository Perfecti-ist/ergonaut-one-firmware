#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI GRAVE          &kp Q  &kp W  &kp E        &kp R            &kp T        &kp Y        &kp U           &kp I             &kp O    &kp P     &kp LBKT
&mt LCTRL EQUAL         &kp A  &kp S  &kp D        &kp F            &kp G        &kp H        &kp J           &kp K             &kp L    &kp SEMI  &mt RCTRL SQT
&mt LEFT_ALT BACKSLASH  &kp Z  &kp X  &kp C        &kp V            &kp B        &kp N        &kp M           &kp COMMA         &kp DOT  &kp FSLH  &mt RALT RIGHT_BRACKET
                                      &lt RSE TAB  &mt LSHFT SPACE  &lt LWR RET  &lt LWR ESC  &mt RSHFT BSPC  &lt RSE CAPSLOCK
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2    &kp F3             &kp F4    &kp F5         &kp F6     &kp F7     &kp F8    &kp F9    &kp F10   &kp F11   &mt F12 RIGHT_GUI
&mt LCTRL PLUS  &kp EXCL  &kp DOUBLE_QUOTES  &kp HASH  &kp SEMICOLON  &kp PRCNT  &kp COLON  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL UNDERSCORE
&mt LALT EQUAL  &kp N1    &kp N2             &kp N3    &kp N4         &kp N5     &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &mt RIGHT_ALT MINUS
                                             &trans    &trans         &trans     &trans     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&none  &none      &none        &none     &none       &none          &kp LA(A)      &kp LA(H)      &kp LA(D)      &kp LA(W)       &kp LA(V)       &kp LA(S)
&none  &kp CARET  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp AMPERSAND  &kp LA(LC(L))  &kp LA(LC(T))  &kp LA(LC(R))  &kp LA(LC(G))   &kp UP_ARROW    &none
&none  &none      &none        &none     &none       &none          &none          &none          &none          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
                               &trans    &trans      &trans         &trans         &trans         &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
